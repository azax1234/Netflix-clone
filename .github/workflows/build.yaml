name: Checkout, Static analysis with Sonar, Build and Push Docker Image, Trivy scan image, Update Helm Chart

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '!chart/**'
      - '!.github/**'

jobs:
  build-push-update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check commit message
      run: |
        if [[ "${{ github.event.head_commit.message }}" == *"skip ci"* ]]; then
          echo "Skipping CI due to commit message"
          exit 78
        fi

    - name: Check for existing tags and create initial if needed
      id: check_tags
      run: |
        if [ -z "$(git tag)" ]; then
          echo "No tags found. Creating initial tag v0.1.0"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag v0.1.0
          git push origin v0.1.0
          echo "initial_tag_created=true" >> $GITHUB_OUTPUT
        else
          echo "initial_tag_created=false" >> $GITHUB_OUTPUT
        fi

    - name: Calculate SemVer
      id: semver
      uses: ietf-tools/semver-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
    
    - name: Trim SONAR_TOKEN
      run: echo "TRIMMED_SONAR_TOKEN=$(echo '${{ secrets.SONAR_TOKEN }}' | tr -d '[:space:]')" >> $GITHUB_ENV

    #  name: SonarCloud Scan
      #uses: SonarSource/sonarcloud-github-action@master
      #env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #with:
     #   args: >
    #      -Dsonar.organization=${{ secrets.SONAR_ORG_KEY }}
   #       -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
  #        -Dsonar.sources=src
 #         -Dsonar.verbose=true
#          -X

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.semver.outputs.next }}
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
        build-args: |
          TMDB_V3_API_KEY=${{ secrets.TMDB_V3_API_KEY }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.semver.outputs.next }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Update Helm Chart
      run: |
        sed -i 's/^appVersion:.*/appVersion: "${{ steps.semver.outputs.next }}"/' ./chart/Chart.yaml
        sed -i 's/^version:.*/version: ${{ steps.semver.outputs.next }}/' ./chart/Chart.yaml
        sed -i 's/tag:.*/tag: "${{ steps.semver.outputs.next }}"/' ./chart/values.yaml

    - name: Commit and Push Changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ./chart/Chart.yaml ./chart/values.yaml
        git commit -m "Update Helm chart to version ${{ steps.semver.outputs.next }}"
        git push

    # Optional steps remain commented out as in your original workflow